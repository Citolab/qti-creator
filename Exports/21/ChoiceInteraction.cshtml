@using System
@using System.Linq
@model Citolab.QTI.Package.Creator.Model.MultipleChoiceItem
<?xml version="1.0" encoding="utf-8"?>

<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 http://www.imsglobal.org/xsd/qti/qtiv2p1/imsqti_v2p1.xsd" identifier="@Model.UniqueId" title="@Model.Title" adaptive="false" timeDependent="false">
    <responseDeclaration identifier="RESPONSE" cardinality="single" baseType="identifier">
        <correctResponse>
            @foreach (var key in Model.Keys)
            {
                <value>@key</value>
            }
        </correctResponse>
    </responseDeclaration>
    <outcomeDeclaration identifier="SCORE" cardinality="single" baseType="float">
        <defaultValue>
            <value>0</value>
        </defaultValue>
    </outcomeDeclaration>
    <itemBody>
        @Raw(Model.Body)
        <div>
            <choiceInteraction responseIdentifier="RESPONSE" shuffle="false" maxChoices="@(Model.Keys.Count > 1 ? @Model.Alternatives.Count - 1 : 1)">
                @for (var i = 0; i <= Model.Alternatives.Count() - 1; i++)
                {
                    <simpleChoice identifier="@Convert.ToChar(65 + i)">@Raw(Model.Alternatives[i].Text)</simpleChoice>
                }
            </choiceInteraction>
        </div>
    </itemBody>
    <responseProcessing template="http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct"/>
</assessmentItem>
